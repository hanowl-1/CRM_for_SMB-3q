-- Supabase Migration Script
-- Converted from MySQL dump files to PostgreSQL

-- Enable necessary extensions
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Drop tables if they exist (in reverse dependency order)
DROP TABLE IF EXISTS "NaverPlaceKeywordRankHistories" CASCADE;
DROP TABLE IF EXISTS "AdNaverPlaceKeywords" CASCADE;
DROP TABLE IF EXISTS "NaverPlaceKeywords" CASCADE;
DROP TABLE IF EXISTS "KeywordRankHistories" CASCADE;
DROP TABLE IF EXISTS "CampaignKeywords" CASCADE;
DROP TABLE IF EXISTS "AdKeywordRankHistories" CASCADE;
DROP TABLE IF EXISTS "AdKeywords" CASCADE;
DROP TABLE IF EXISTS "Ads_Keyword" CASCADE;
DROP TABLE IF EXISTS "Contracts" CASCADE;
DROP TABLE IF EXISTS "Channels" CASCADE;
DROP TABLE IF EXISTS "Packages_Log" CASCADE;
DROP TABLE IF EXISTS "Packages" CASCADE;
DROP TABLE IF EXISTS "PremiumPackages" CASCADE;
DROP TABLE IF EXISTS "SumemPoints" CASCADE;
DROP TABLE IF EXISTS "Charges" CASCADE;
DROP TABLE IF EXISTS "Ads_Payment" CASCADE;
DROP TABLE IF EXISTS "Ads_Termination_Log" CASCADE;
DROP TABLE IF EXISTS "Ads_Group" CASCADE;
DROP TABLE IF EXISTS "Ads" CASCADE;
DROP TABLE IF EXISTS "App_Inquiry_Answer_AutoGenerated" CASCADE;
DROP TABLE IF EXISTS "App_Inquiry_Answer" CASCADE;
DROP TABLE IF EXISTS "App_Inquiry" CASCADE;
DROP TABLE IF EXISTS "AuthUsers_Card" CASCADE;
DROP TABLE IF EXISTS "MarketingLead_Assignees" CASCADE;
DROP TABLE IF EXISTS "MarketingLead" CASCADE;
DROP TABLE IF EXISTS "Keywords" CASCADE;
DROP TABLE IF EXISTS "Propositions" CASCADE;
DROP TABLE IF EXISTS "Companies" CASCADE;
DROP TABLE IF EXISTS "Users" CASCADE;
DROP TABLE IF EXISTS "Ads_Local" CASCADE;

-- Create tables in dependency order

-- 1. Ads_Local (no dependencies)
CREATE TABLE "Ads_Local" (
  "code" INTEGER PRIMARY KEY,
  "region" VARCHAR(50) NOT NULL,
  "local" VARCHAR(50) NOT NULL
);

-- 2. Users (no dependencies)
CREATE TABLE "Users" (
  "uid" VARCHAR(32) PRIMARY KEY,
  "outerId" VARCHAR(32),
  "level" VARCHAR(32),
  "email" VARCHAR(64),
  "displayName" VARCHAR(32),
  "phone" VARCHAR(32),
  "phoneNumber" VARCHAR(32),
  "gender" VARCHAR(8),
  "birth" VARCHAR(8),
  "extensionCount" INTEGER,
  "token" VARCHAR(256),
  "type" VARCHAR(32),
  "group" VARCHAR(32),
  "appVersion" VARCHAR(32),
  "os" VARCHAR(32),
  "osVersion" VARCHAR(32),
  "delayed" INTEGER,
  "premium" INTEGER,
  "lastDestination" VARCHAR(36),
  "photoURL" VARCHAR(256),
  "preserved" INTEGER,
  "postQuality" INTEGER,
  "memo" JSONB,
  "local" JSONB,
  "membersLocal" JSONB,
  "blocked" JSONB,
  "naverHistory" JSONB,
  "instaHistory" JSONB,
  "youtubeChannel" JSONB,
  "penaltyHistory" JSONB,
  "agreement" BOOLEAN DEFAULT FALSE,
  "visitorCount" DECIMAL(10,2) DEFAULT 0.00,
  "visitorDate" TIMESTAMP,
  "lastLogin" TIMESTAMP,
  "anonymousUpdated" TIMESTAMP,
  "lastContractDate" TIMESTAMP,
  "installedAt" TIMESTAMP,
  "signupAt" TIMESTAMP,
  "requestedAt" TIMESTAMP,
  "updatedAt" TIMESTAMP
);

-- 3. Companies (self-referencing)
CREATE TABLE "Companies" (
  "id" SERIAL PRIMARY KEY,
  "companyId" INTEGER,
  "contacts" VARCHAR(255),
  "recommended" VARCHAR(255),
  "route" VARCHAR(255),
  "email" VARCHAR(255) NOT NULL,
  "name" VARCHAR(255),
  "charger" VARCHAR(255),
  "agree_to_mail" BOOLEAN,
  "email2" VARCHAR(255),
  "last_login" TIMESTAMP,
  "date_joined" TIMESTAMP,
  "is_active" INTEGER,
  "is_superuser" INTEGER,
  "first_name" VARCHAR(255),
  "registration" VARCHAR(255),
  "username" VARCHAR(255),
  "password" VARCHAR(255),
  "last_name" VARCHAR(255),
  "is_staff" INTEGER,
  "createdAt" TIMESTAMP NOT NULL,
  "updatedAt" TIMESTAMP NOT NULL,
  "memo" TEXT,
  "last_login_matching" TIMESTAMP,
  "contacts2" TEXT,
  "email3" TEXT,
  "route2" VARCHAR(255),
  "manager" VARCHAR(255),
  FOREIGN KEY ("companyId") REFERENCES "Companies"("id") ON DELETE RESTRICT
);

CREATE INDEX "idx_companies_email" ON "Companies"("email");

-- 4. Keywords (no dependencies)
CREATE TABLE "Keywords" (
  "id" SERIAL PRIMARY KEY,
  "name" VARCHAR(255) NOT NULL UNIQUE,
  "mmqccnt" INTEGER,
  "cat1" VARCHAR(255),
  "cat2" VARCHAR(255),
  "ids" TEXT,
  "createdAt" TIMESTAMP NOT NULL,
  "updatedAt" TIMESTAMP NOT NULL,
  "difficulty" REAL,
  "efficiency" REAL,
  "duration" INTEGER
);

-- 5. Propositions (placeholder - referenced but not defined in dumps)
CREATE TABLE "Propositions" (
  "id" SERIAL PRIMARY KEY,
  "name" VARCHAR(255),
  "createdAt" TIMESTAMP DEFAULT NOW(),
  "updatedAt" TIMESTAMP DEFAULT NOW()
);

-- 6. CampaignKeywords (placeholder - referenced but not defined in dumps)
CREATE TABLE "CampaignKeywords" (
  "id" SERIAL PRIMARY KEY,
  "name" VARCHAR(255),
  "createdAt" TIMESTAMP DEFAULT NOW(),
  "updatedAt" TIMESTAMP DEFAULT NOW()
);

-- 7. Charges (placeholder - referenced but not defined in dumps)
CREATE TABLE "Charges" (
  "id" SERIAL PRIMARY KEY,
  "amount" INTEGER,
  "createdAt" TIMESTAMP DEFAULT NOW(),
  "updatedAt" TIMESTAMP DEFAULT NOW()
);

-- 8. Ads_Group (placeholder - referenced but not defined in dumps)
CREATE TABLE "Ads_Group" (
  "id" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  "name" VARCHAR(255),
  "createdAt" TIMESTAMP DEFAULT NOW(),
  "updatedAt" TIMESTAMP DEFAULT NOW()
);

-- 9. NaverPlaceKeywords (placeholder - referenced but not defined in dumps)
CREATE TABLE "NaverPlaceKeywords" (
  "id" SERIAL PRIMARY KEY,
  "name" VARCHAR(255),
  "createdAt" TIMESTAMP DEFAULT NOW(),
  "updatedAt" TIMESTAMP DEFAULT NOW()
);

-- 10. MarketingLead_Assignees (referenced in MarketingLead)
CREATE TABLE "MarketingLead_Assignees" (
  "nickname" VARCHAR(36) PRIMARY KEY,
  "name" VARCHAR(255),
  "createdAt" TIMESTAMP DEFAULT NOW(),
  "updatedAt" TIMESTAMP DEFAULT NOW()
);

-- 11. Ads (depends on Companies and Ads_Group)
CREATE TABLE "Ads" (
  "id" SERIAL PRIMARY KEY,
  "companyId" INTEGER,
  "liked" INTEGER,
  "reservationComment" TEXT,
  "contacts" VARCHAR(255),
  "deadline" INTEGER,
  "abstraction" TEXT,
  "question" TEXT,
  "lastContractDateInsta" TIMESTAMP,
  "address" VARCHAR(255),
  "name" VARCHAR(255),
  "is_verified" INTEGER,
  "category" TEXT,
  "categoryCode" INTEGER,
  "unavailable" TEXT,
  "hashtags" TEXT,
  "verified" BOOLEAN,
  "lon" DOUBLE PRECISION,
  "rKey" VARCHAR(255),
  "step" INTEGER,
  "local" TEXT,
  "localCode" INTEGER,
  "operationType" VARCHAR(32),
  "time" TEXT,
  "thumbnails" TEXT,
  "thumbnail" VARCHAR(255),
  "lastContractDate" TIMESTAMP,
  "lat" DOUBLE PRECISION,
  "code" VARCHAR(255),
  "delivery" TEXT,
  "isReservationRequired" BOOLEAN,
  "keywords" TEXT,
  "email" VARCHAR(255),
  "menu" TEXT,
  "addressDetail" VARCHAR(255),
  "user_id" INTEGER,
  "introduction" TEXT,
  "instaOfficial" VARCHAR(255),
  "additionalInfo" TEXT,
  "csNumber" VARCHAR(255),
  "deliveryMethod" VARCHAR(255),
  "companyName" VARCHAR(255),
  "site" VARCHAR(255),
  "registerLink" VARCHAR(255),
  "shipping" TEXT,
  "images" TEXT,
  "registerAlert" TEXT,
  "manual" TEXT,
  "key" INTEGER,
  "memo" TEXT,
  "purchaseLink" VARCHAR(255),
  "image" VARCHAR(255),
  "createdAt" TIMESTAMP NOT NULL,
  "updatedAt" TIMESTAMP NOT NULL,
  "receiptReviewRequired" BOOLEAN,
  "ftcRequired" BOOLEAN,
  "ftcText" VARCHAR(255),
  "naverPlaceUrl" VARCHAR(255),
  "requiredKeywords" TEXT,
  "priority" INTEGER,
  "requirement" TEXT,
  "type" VARCHAR(255),
  "diamondPoint" INTEGER,
  "nt" TEXT,
  "utm" TEXT,
  "periodApply" INTEGER DEFAULT 10,
  "periodAccept" INTEGER DEFAULT 2,
  "periodReview" INTEGER DEFAULT 14,
  "bannerImg" VARCHAR(255),
  "blackPoint" INTEGER,
  "redPoint" INTEGER,
  "yellowPoint" INTEGER,
  "storeId" VARCHAR(255),
  "disableAutoSelection" BOOLEAN,
  "adsGroupId" UUID,
  "weekdayReport" INTEGER,
  FOREIGN KEY ("companyId") REFERENCES "Companies"("id") ON DELETE RESTRICT,
  FOREIGN KEY ("adsGroupId") REFERENCES "Ads_Group"("id") ON DELETE SET NULL
);

CREATE INDEX "idx_ads_companyId" ON "Ads"("companyId");
CREATE INDEX "idx_ads_email" ON "Ads"("email");

-- 12. AdKeywords (depends on Ads)
CREATE TABLE "AdKeywords" (
  "id" SERIAL PRIMARY KEY,
  "adId" INTEGER,
  "info" TEXT,
  "name" VARCHAR(255),
  "createdAt" TIMESTAMP NOT NULL,
  "updatedAt" TIMESTAMP NOT NULL,
  FOREIGN KEY ("adId") REFERENCES "Ads"("id")
);

CREATE INDEX "idx_adkeywords_adId" ON "AdKeywords"("adId");

-- 13. Ads_Keyword (depends on Ads)
CREATE TABLE "Ads_Keyword" (
  "id" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  "adId" INTEGER NOT NULL,
  "name" VARCHAR(64),
  "info" TEXT,
  "createdAt" TIMESTAMP DEFAULT NOW()
);

-- 14. AdNaverPlaceKeywords (depends on Ads and NaverPlaceKeywords)
CREATE TABLE "AdNaverPlaceKeywords" (
  "id" SERIAL PRIMARY KEY,
  "adId" INTEGER,
  "naverPlaceKeywordId" INTEGER,
  "storeId" VARCHAR(255),
  "name" VARCHAR(255),
  "createdAt" TIMESTAMP NOT NULL,
  "updatedAt" TIMESTAMP NOT NULL,
  FOREIGN KEY ("adId") REFERENCES "Ads"("id"),
  FOREIGN KEY ("naverPlaceKeywordId") REFERENCES "NaverPlaceKeywords"("id")
);

-- 15. Contracts (depends on Ads)
CREATE TABLE "Contracts" (
  "id" VARCHAR(255) PRIMARY KEY,
  "company" INTEGER,
  "companyName" VARCHAR(255),
  "currentState" INTEGER,
  "review" VARCHAR(255),
  "date0" TIMESTAMP,
  "reward" VARCHAR(255),
  "link" VARCHAR(255),
  "feedback" BOOLEAN,
  "push" BOOLEAN,
  "level" VARCHAR(255),
  "user" VARCHAR(255),
  "userEmail" VARCHAR(255),
  "date1" TIMESTAMP,
  "second" VARCHAR(255),
  "first" VARCHAR(255),
  "group" VARCHAR(255),
  "username" VARCHAR(255),
  "type" VARCHAR(255),
  "used" INTEGER,
  "third" VARCHAR(255),
  "payment" INTEGER,
  "deadline" INTEGER,
  "purchaseDeadline" INTEGER,
  "discount" INTEGER,
  "mark" INTEGER,
  "date2" TIMESTAMP,
  "private" BOOLEAN,
  "extended" BOOLEAN,
  "deliveryState" INTEGER,
  "deliveryHistory" TEXT,
  "payPrice" INTEGER,
  "deliveryDate" TIMESTAMP,
  "paidAt" TIMESTAMP,
  "gender" VARCHAR(255),
  "delivery" TEXT,
  "payState" INTEGER,
  "deliveryMethod" VARCHAR(255),
  "pay" VARCHAR(255),
  "birth" INTEGER,
  "userOuterId" VARCHAR(255),
  "quality" INTEGER,
  "tags" TEXT,
  "follower" INTEGER,
  "like" INTEGER,
  "play" INTEGER,
  "rKey" VARCHAR(255),
  "reply" INTEGER,
  "canceledReason" VARCHAR(255),
  "canceledAt" TIMESTAMP,
  "memo" TEXT,
  "usercode" VARCHAR(255),
  "outerId" VARCHAR(255),
  "createdAt" TIMESTAMP NOT NULL,
  "updatedAt" TIMESTAMP NOT NULL,
  "receiptReview" VARCHAR(255),
  "receiptOnly" BOOLEAN,
  "rewardStatus" INTEGER,
  "rewardCompletedAt" TIMESTAMP,
  "rewardFees" REAL,
  "rewardFeeAmount" INTEGER,
  "withdrawalRequestAt" TIMESTAMP,
  "withdrawalAt" TIMESTAMP,
  "bankName" VARCHAR(255),
  "accountNumber" VARCHAR(255),
  "accountHolder" VARCHAR(255),
  "copyBankbook" VARCHAR(255),
  "authName" VARCHAR(255),
  "authID" VARCHAR(255),
  "authCategory" VARCHAR(255),
  "authAddr" VARCHAR(255),
  "authBusiness" VARCHAR(255),
  "purchaseThumbnail" VARCHAR(255),
  "views" INTEGER,
  "appliedAt" TIMESTAMP,
  "point" INTEGER,
  "pointStatus" INTEGER,
  "periodWaitingPoint" INTEGER,
  "pendingAt" TIMESTAMP,
  "fees" REAL,
  "earnedAt" TIMESTAMP,
  "settlementAmount" INTEGER,
  "feeAmount" INTEGER,
  "selectedAt" TIMESTAMP,
  "isAutoSelected" BOOLEAN DEFAULT FALSE,
  "usedAt" TIMESTAMP,
  "purchaseLink" VARCHAR(255),
  FOREIGN KEY ("company") REFERENCES "Ads"("id") ON DELETE RESTRICT
);

CREATE INDEX "idx_contracts_company" ON "Contracts"("company");
CREATE INDEX "idx_contracts_user" ON "Contracts"("user");

-- 16. Channels (depends on Ads)
CREATE TABLE "Channels" (
  "id" SERIAL PRIMARY KEY,
  "adId" INTEGER,
  "currentAdsOrder" INTEGER,
  "channel" VARCHAR(255),
  "yellowPrice" INTEGER,
  "blackPrice" INTEGER,
  "available" INTEGER,
  "blackPayment" INTEGER,
  "stopRequest" BOOLEAN,
  "yellow" VARCHAR(255),
  "revisitPeriod" INTEGER,
  "redPayment" INTEGER,
  "redPrice" INTEGER,
  "black" VARCHAR(255),
  "yellowPayment" INTEGER,
  "current" INTEGER,
  "red" VARCHAR(255),
  "startDate" VARCHAR(255),
  "mission" TEXT,
  "limitation" TEXT,
  "type" VARCHAR(255),
  "number" INTEGER,
  "blackFullPrice" INTEGER,
  "yellowFullPrice" INTEGER,
  "redFullPrice" INTEGER,
  "deliveryCharge" INTEGER,
  "paid" BOOLEAN,
  "finished" BOOLEAN,
  "payInfo_dayOfMonth" VARCHAR(255),
  "payInfo_checkBlogger" BOOLEAN,
  "payInfo_lastPaidAt" VARCHAR(255),
  "payInfo_startPaidAt" VARCHAR(255),
  "payInfo_checkBloggerCnt" INTEGER,
  "payInfo_endPaidAt" VARCHAR(255),
  "payInfo_amount" INTEGER,
  "payInfo_payMethod" VARCHAR(255),
  "payInfo_extended" BOOLEAN,
  "payInfo_card" INTEGER,
  "payInfo_plan" INTEGER,
  "payInfo_memo" TEXT,
  "createdAt" TIMESTAMP NOT NULL,
  "updatedAt" TIMESTAMP NOT NULL,
  "payInfo_checkPeriod" BOOLEAN,
  "payInfo_nextPaidAt" VARCHAR(255),
  "payInfo_prePayCnt" INTEGER,
  "whitePrice" INTEGER,
  "white" VARCHAR(255),
  "whitePayment" INTEGER,
  "whiteFullPrice" INTEGER,
  "enableWhite" BOOLEAN,
  "diamond" VARCHAR(255),
  "diamondPrice" INTEGER,
  "diamondPayment" INTEGER,
  "diamondFullPrice" INTEGER,
  "payInfo_installmentAmount" INTEGER,
  "payInfo_installmentNumber" INTEGER,
  UNIQUE ("adId", "channel")
);

CREATE INDEX "idx_channels_adId" ON "Channels"("adId");

-- 17. AuthUsers_Card (depends on Companies)
CREATE TABLE "AuthUsers_Card" (
  "cardId" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  "companyId" INTEGER NOT NULL,
  "id" INTEGER NOT NULL,
  "cardName" VARCHAR(32),
  "customerName" VARCHAR(32),
  "customerUid" VARCHAR(64),
  "last4" VARCHAR(32),
  "status" VARCHAR(32),
  "main" BOOLEAN DEFAULT FALSE,
  "createdAt" TIMESTAMP,
  "updatedAt" TIMESTAMP,
  UNIQUE ("companyId", "id"),
  FOREIGN KEY ("companyId") REFERENCES "Companies"("id")
);

-- 18. App_Inquiry (no dependencies)
CREATE TABLE "App_Inquiry" (
  "id" SERIAL PRIMARY KEY,
  "uid" VARCHAR(36) NOT NULL,
  "category" VARCHAR(255) NOT NULL,
  "subCategory" VARCHAR(255),
  "contentText" TEXT,
  "contentImages" JSONB,
  "adId" INTEGER,
  "additionalInfo" JSONB,
  "os" VARCHAR(50),
  "osVersion" VARCHAR(50),
  "appVersion" VARCHAR(50),
  "device" VARCHAR(255),
  "isAnswered" BOOLEAN DEFAULT FALSE,
  "answeredAt" TIMESTAMP,
  "updatedAt" TIMESTAMP,
  "createdAt" TIMESTAMP NOT NULL DEFAULT NOW()
);

-- 19. App_Inquiry_Answer (depends on App_Inquiry)
CREATE TABLE "App_Inquiry_Answer" (
  "id" SERIAL PRIMARY KEY,
  "inquiryId" INTEGER,
  "contentText" TEXT NOT NULL,
  "contentImages" JSONB,
  "isRead" BOOLEAN DEFAULT FALSE,
  "readAt" TIMESTAMP,
  "updatedAt" TIMESTAMP,
  "createdAt" TIMESTAMP NOT NULL DEFAULT NOW(),
  FOREIGN KEY ("inquiryId") REFERENCES "App_Inquiry"("id") ON DELETE CASCADE
);

-- 20. App_Inquiry_Answer_AutoGenerated (depends on App_Inquiry)
CREATE TABLE "App_Inquiry_Answer_AutoGenerated" (
  "id" SERIAL PRIMARY KEY,
  "inquiryId" INTEGER NOT NULL,
  "generatedAnswer" TEXT NOT NULL,
  "createdAt" TIMESTAMP DEFAULT NOW(),
  "updatedAt" TIMESTAMP DEFAULT NOW(),
  FOREIGN KEY ("inquiryId") REFERENCES "App_Inquiry"("id") ON DELETE CASCADE
);

-- 21. MarketingLead (depends on Companies and MarketingLead_Assignees)
CREATE TABLE "MarketingLead" (
  "id" SERIAL PRIMARY KEY,
  "companyId" INTEGER,
  "assignee" VARCHAR(36),
  "companyName" VARCHAR(255) NOT NULL,
  "adCategory" VARCHAR(36) NOT NULL,
  "contact" VARCHAR(36) NOT NULL,
  "x" DOUBLE PRECISION,
  "y" DOUBLE PRECISION,
  "localCode" INTEGER,
  "naverPlaceId" VARCHAR(256),
  "crawlFailReason" VARCHAR(64),
  "callTemperature" INTEGER,
  "agreeToMarketing" BOOLEAN NOT NULL DEFAULT FALSE,
  "isInquirySkipped" BOOLEAN DEFAULT FALSE,
  "kakaoRegistered" BOOLEAN DEFAULT FALSE,
  "createdAt" TIMESTAMP DEFAULT NOW(),
  "updatedAt" TIMESTAMP DEFAULT NOW(),
  FOREIGN KEY ("companyId") REFERENCES "Companies"("id") ON DELETE RESTRICT,
  FOREIGN KEY ("assignee") REFERENCES "MarketingLead_Assignees"("nickname") ON DELETE RESTRICT
);

-- 22. Packages (depends on Companies, Ads, and Charges)
CREATE TABLE "Packages" (
  "id" SERIAL PRIMARY KEY,
  "companyId" INTEGER,
  "adId" INTEGER,
  "name" VARCHAR(255),
  "period" INTEGER,
  "number" INTEGER,
  "price" INTEGER,
  "balance" INTEGER,
  "total" INTEGER,
  "notes" VARCHAR(255),
  "createdAt" TIMESTAMP NOT NULL,
  "updatedAt" TIMESTAMP NOT NULL,
  "chargeId" INTEGER,
  "adsPaymentId" VARCHAR(36),
  "contractId" VARCHAR(36),
  "order" INTEGER,
  FOREIGN KEY ("companyId") REFERENCES "Companies"("id"),
  FOREIGN KEY ("adId") REFERENCES "Ads"("id"),
  FOREIGN KEY ("chargeId") REFERENCES "Charges"("id")
);

-- 23. Packages_Log (depends on Companies, Ads, and Contracts)
CREATE TABLE "Packages_Log" (
  "id" SERIAL PRIMARY KEY,
  "companyId" INTEGER NOT NULL,
  "adId" INTEGER,
  "contractId" VARCHAR(255),
  "amount" INTEGER NOT NULL,
  "notes" TEXT,
  "createdAt" TIMESTAMP NOT NULL,
  FOREIGN KEY ("companyId") REFERENCES "Companies"("id"),
  FOREIGN KEY ("adId") REFERENCES "Ads"("id"),
  FOREIGN KEY ("contractId") REFERENCES "Contracts"("id")
);

-- 24. PremiumPackages (depends on Companies, Ads, and Charges)
CREATE TABLE "PremiumPackages" (
  "id" SERIAL PRIMARY KEY,
  "companyId" INTEGER,
  "adId" INTEGER,
  "chargeId" INTEGER,
  "name" VARCHAR(255),
  "period" INTEGER,
  "number" INTEGER,
  "price" INTEGER,
  "balance" INTEGER,
  "total" INTEGER,
  "notes" VARCHAR(255),
  "createdAt" TIMESTAMP NOT NULL,
  "updatedAt" TIMESTAMP NOT NULL,
  "order" INTEGER,
  FOREIGN KEY ("companyId") REFERENCES "Companies"("id"),
  FOREIGN KEY ("adId") REFERENCES "Ads"("id"),
  FOREIGN KEY ("chargeId") REFERENCES "Charges"("id")
);

-- 25. SumemPoints (depends on Charges)
CREATE TABLE "SumemPoints" (
  "id" SERIAL PRIMARY KEY,
  "companyId" INTEGER,
  "contractId" VARCHAR(255),
  "amount" INTEGER,
  "balance" INTEGER,
  "total" INTEGER,
  "pointType" VARCHAR(16),
  "notes" VARCHAR(255),
  "createdAt" TIMESTAMP NOT NULL,
  "updatedAt" TIMESTAMP NOT NULL,
  "chargeId" INTEGER,
  FOREIGN KEY ("chargeId") REFERENCES "Charges"("id")
);

-- 26. Ads_Payment (depends on Ads)
CREATE TABLE "Ads_Payment" (
  "id" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  "adId" INTEGER NOT NULL,
  "adsStart" VARCHAR(10),
  "amount" INTEGER,
  "contractCount" INTEGER,
  "plan" INTEGER,
  "order" INTEGER,
  "checkBlogger" BOOLEAN,
  "checkBloggerCnt" INTEGER,
  "checkPeriod" BOOLEAN,
  "extend1st" BOOLEAN,
  "extend2nd" BOOLEAN,
  "extended" BOOLEAN,
  "alarm1st" BOOLEAN,
  "alarm2nd" BOOLEAN,
  "prePayCnt" INTEGER,
  "discount" INTEGER,
  "qtyDiscount" INTEGER,
  "feedback" BOOLEAN,
  "payState" INTEGER,
  "card_name" VARCHAR(255),
  "payMethod" VARCHAR(255),
  "dayOfMonth" VARCHAR(255),
  "type" VARCHAR(255),
  "installmentAmount" INTEGER,
  "installmentNumber" INTEGER,
  "installmentTotal" INTEGER,
  "receipt" VARCHAR(255),
  "channel" VARCHAR(255) NOT NULL,
  "imp_uid" VARCHAR(255),
  "memo" TEXT,
  "nextPaidAt" VARCHAR(10),
  "paidAt" TIMESTAMP,
  "createdAt" TIMESTAMP,
  "updatedAt" TIMESTAMP,
  "endReason" INTEGER,
  "number" INTEGER,
  "periodApply" INTEGER,
  "periodAccept" INTEGER,
  "periodReview" INTEGER,
  "disableAutoSelection" BOOLEAN DEFAULT FALSE,
  "refundedPackageId" INTEGER
);

CREATE INDEX "idx_ads_payment_adId" ON "Ads_Payment"("adId");

-- 27. Ads_Termination_Log (depends on Companies and Ads)
CREATE TABLE "Ads_Termination_Log" (
  "id" SERIAL PRIMARY KEY,
  "companyId" INTEGER NOT NULL,
  "adId" INTEGER NOT NULL,
  "previousAvailable" INTEGER,
  "currentAvailable" INTEGER,
  "updatedAt" TIMESTAMP
);

-- 28. AdKeywordRankHistories (depends on AdKeywords)
CREATE TABLE "AdKeywordRankHistories" (
  "id" SERIAL PRIMARY KEY,
  "adKeywordId" INTEGER,
  "contractId" VARCHAR(255),
  "date" TIMESTAMP,
  "level" VARCHAR(255),
  "rank" INTEGER,
  "screenshot" VARCHAR(255),
  "username" VARCHAR(255),
  "createdAt" TIMESTAMP NOT NULL,
  "updatedAt" TIMESTAMP NOT NULL
);

CREATE INDEX "idx_adkeywordrankhistories_contractid_date" ON "AdKeywordRankHistories"("contractId", "date" DESC);
CREATE INDEX "idx_adkeywordrankhistories_adkeywordid_date" ON "AdKeywordRankHistories"("adKeywordId", "date" DESC);

-- 29. KeywordRankHistories (depends on Keywords, Propositions, and CampaignKeywords)
CREATE TABLE "KeywordRankHistories" (
  "id" SERIAL PRIMARY KEY,
  "keywordId" INTEGER,
  "propositionId" INTEGER,
  "date" TIMESTAMP,
  "level" VARCHAR(255),
  "rank" INTEGER,
  "screenshot" VARCHAR(255),
  "username" VARCHAR(255),
  "createdAt" TIMESTAMP NOT NULL,
  "updatedAt" TIMESTAMP NOT NULL,
  "campaignKeywordId" INTEGER,
  FOREIGN KEY ("keywordId") REFERENCES "Keywords"("id") ON DELETE RESTRICT,
  FOREIGN KEY ("propositionId") REFERENCES "Propositions"("id") ON DELETE RESTRICT,
  FOREIGN KEY ("campaignKeywordId") REFERENCES "CampaignKeywords"("id") ON DELETE RESTRICT
);

-- 30. NaverPlaceKeywordRankHistories (depends on AdNaverPlaceKeywords)
CREATE TABLE "NaverPlaceKeywordRankHistories" (
  "id" SERIAL PRIMARY KEY,
  "adNaverPlaceKeywordId" INTEGER,
  "date" TIMESTAMP,
  "rank" INTEGER,
  "createdAt" TIMESTAMP NOT NULL,
  "updatedAt" TIMESTAMP NOT NULL,
  FOREIGN KEY ("adNaverPlaceKeywordId") REFERENCES "AdNaverPlaceKeywords"("id")
);

-- Enable Row Level Security (RLS) for all tables
ALTER TABLE "Ads_Local" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "Users" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "Companies" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "Keywords" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "Propositions" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "CampaignKeywords" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "Charges" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "Ads_Group" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "NaverPlaceKeywords" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "MarketingLead_Assignees" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "Ads" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "AdKeywords" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "Ads_Keyword" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "AdNaverPlaceKeywords" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "Contracts" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "Channels" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "AuthUsers_Card" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "App_Inquiry" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "App_Inquiry_Answer" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "App_Inquiry_Answer_AutoGenerated" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "MarketingLead" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "Packages" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "Packages_Log" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "PremiumPackages" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "SumemPoints" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "Ads_Payment" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "Ads_Termination_Log" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "AdKeywordRankHistories" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "KeywordRankHistories" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "NaverPlaceKeywordRankHistories" ENABLE ROW LEVEL SECURITY;

-- Create basic RLS policies (you may need to adjust these based on your authentication requirements)
-- Example policy for Companies table
CREATE POLICY "Enable read access for all users" ON "Companies" FOR SELECT USING (true);
CREATE POLICY "Enable insert for authenticated users only" ON "Companies" FOR INSERT WITH CHECK (auth.role() = 'authenticated');
CREATE POLICY "Enable update for authenticated users only" ON "Companies" FOR UPDATE USING (auth.role() = 'authenticated');
CREATE POLICY "Enable delete for authenticated users only" ON "Companies" FOR DELETE USING (auth.role() = 'authenticated');

-- Note: You'll need to create similar policies for other tables based on your security requirements

-- Create indexes for better performance
CREATE INDEX "idx_ads_companyId_createdAt" ON "Ads"("companyId", "createdAt" DESC);
CREATE INDEX "idx_contracts_company_createdAt" ON "Contracts"("company", "createdAt" DESC);
CREATE INDEX "idx_app_inquiry_uid" ON "App_Inquiry"("uid");
CREATE INDEX "idx_marketing_lead_companyId" ON "MarketingLead"("companyId");

-- Add comments to tables for documentation
COMMENT ON TABLE "Companies" IS 'Company information and user accounts';
COMMENT ON TABLE "Ads" IS 'Advertisement campaigns and listings';
COMMENT ON TABLE "Contracts" IS 'User contracts and agreements';
COMMENT ON TABLE "Users" IS 'End user information';
COMMENT ON TABLE "App_Inquiry" IS 'Customer support inquiries';

-- Migration completed successfully
-- Remember to:
-- 1. Adjust RLS policies based on your authentication requirements
-- 2. Import actual data using COPY commands or INSERT statements
-- 3. Update sequences if importing data with specific IDs
-- 4. Test all foreign key relationships
-- 5. Verify indexes are working as expected 